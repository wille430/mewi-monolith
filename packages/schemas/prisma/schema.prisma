// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
  output          = "../../../node_modules/@mewi/prisma"
}

generator factories {
  provider = "prisma-factory"
  output   = "../../../node_modules/@mewi/prisma/factory"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Watcher {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  metadata Metadata

  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  UserWatcher UserWatcher[]
}

model UserWatcher {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  watcherId String  @db.ObjectId
  watcher   Watcher @relation(fields: [watcherId], references: [id])

  notifiedAt DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
}

model User {
  id            String         @id @default(auto()) @map("_id") @db.ObjectId
  email         String         @unique()
  password      String?
  premium       Boolean        @default(false)
  watchers      UserWatcher[]
  roles         Role[]
  loginStrategy LoginStrategy  @default(LOCAL)
  passwordReset PasswordReset?
  emailUpdate   EmailUpdate?
}

model Listing {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  body        String?
  category    Category
  date        DateTime      @default(now())
  redirectUrl String
  imageUrl    String[]
  price       Price?
  region      String?
  parameters  Paramater[]
  origin      ListingOrigin
  isAuction   Boolean       @default(false)
  auctionEnd  DateTime?
}

enum Role {
  USER
  ADMIN
  GUEST
}

enum LoginStrategy {
  GOOGLE
  LOCAL
}

type PasswordReset {
  tokenHash  String
  expiration Int
}

type EmailUpdate {
  newEmail   String
  tokenHash  String
  expiration DateTime
}

type FilterRange {
  from Int?
  to   Int?
}

type Metadata {
  keyword  String?
  regions  String[]
  category String?
  auction  Boolean?

  priceRangeGte Int?
  priceRangeLte Int?
  dateGte       DateTime?
}

enum Category {
  FORDON
  FOR_HEMMET
  PERSONLIGT
  ELEKTRONIK
  FRITID_HOBBY
  AFFARSVERKSAMHET
  OVRIGT
}

type Price {
  value    Int
  currency Currency
}

enum Currency {
  SEK
}

type Paramater {
  label String
  value String
}

enum ListingOrigin {
  Blocket
  Tradera
  Sellpy
  Blipp
}
