version: 2.1
orbs:
    nx: nrwl/nx@1.1.3
jobs:
    test:
        docker:
            - image: 'cimg/node:14.17-browsers'
              environment:
                - MONGO_URI: localhost
                - TOKEN_KEY: fjAJ4mv0WRlc7ob1Dq7J
                - SEARCH_ENGINE_URL: localhost
                - SEARCH_ENGINE_PORT: 9200

            - image: 'elasticsearch:7.17.0'
              environment:
                - cluser.name: es-test-cluster
                - xpack.security.enabled: false
                - transport.host: localhost
                - network.host: 127.0.0.1
                - http.port: 9200
                - discovery.type: single-node

            - image: 'mongo'
        steps:
            - checkout
            - run:
                  command: npm install --frozen-lockfile
                  name: Install dependencies
            - nx/set-shas:
                  error-on-no-successful-workflow: true
                  main-branch-name: main
            - run:
                command: ./tools/clear_elastic.sh
                name: Prepare Elasticsearch
            - run:
                  command: npx nx affected --target=build --base=$NX_BASE
                  name: Run Builds
            - run:
                  command: npx nx affected --target=test --base=$NX_BASE
                  name: Run Unit Tests
            - persist_to_workspace:
                  root: .
                  paths:
                      - '*'
    deploy:
        machine:
            image: ubuntu-2004:202010-01
        steps:
            - run:
                  command: curl https://get.okteto.com -sSfL | sh
                  name: Install Okteto CLI
            - run:
                  command: okteto login --token $OKTETO_TOKEN
                  name: Login in to Okteto
            - checkout
            - attach_workspace:
                  at: .
            - run:
                  command: npx nx affected --target=deploy --base=$NX_BASE
                  name: Deploy to apps
workflows:
    version: 2
    build_test_and_deploy:
        jobs:
            - test
            - deploy:
                  filters:
                      branches:
                          only:
                              - main
                  requires:
                      - test
