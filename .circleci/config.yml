version: 2.1
orbs:
    gcp-cli: circleci/gcp-cli@2.4.1
jobs:
    setup:
        docker:
            - image: cl00e9ment/node.js-builder
        steps:
            - checkout
            - restore_cache:
                key: dependency-cache-{{ checksum "pnpm-lock.yaml" }}
            - run:
                name: Install
                command: pnpm i -F schemas --frozen-lockfile && pnpm i --frozen-lockfile
            - save_cache:
                key: dependency-cache-{{ checksum "pnpm-lock.yaml" }}
                paths:
                    - node_modules
                    - ./packages/nest-api/node_modules
    build:
        docker:
            - image: cl00e9ment/node.js-builder
        steps:
            - checkout
            - restore_cache:
                key: dependency-cache-{{ checksum "pnpm-lock.yaml" }}
            - run:
                  name: Isolate API workspace
                  command: |
                      pnpm isolate -F nest-api
            - save_cache:
                key: build-output-{{ .Environment.CIRCLE_SHA1 }}
                paths:
                    - ./packages/nest-api/_isolated_
            - store_artifacts:
                path: ./packages/nest-api/_isolated_
                destination: nest-api
    test:
        docker:
            - image: cl00e9ment/node.js-builder
            - image: 'mongo'
        steps:
            - checkout
            - restore_cache:
                key: dependency-cache-{{ checksum "pnpm-lock.yaml" }}
            # TODO: run tests
            - run:
                name: Test and lint
                command: pnpm run lint
    deploy:
        docker:
            - image: google/cloud-sdk
        steps:
            - checkout
            - restore_cache:
                key: build-output-{{ .Environment.CIRCLE_SHA1 }}
            - restore_cache:
                key: dependency-cache-{{ checksum "pnpm-lock.yaml" }}
            - setup_remote_docker:
                  version: 20.10.12
                  docker_layer_caching: true
            - run: ls
            - run:
                name: Authenticate Google Cloud
                command: |
                    touch service-account.json
                    echo $GCLOUD_SERVICE_KEY >> service-account.json
                    gcloud auth activate-service-account --key-file=service-account.json
                    gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
                    gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
                    gcloud auth configure-docker europe-north1-docker.pkg.dev
            - run:
                  name: Install Docker Compose
                  command: |
                      DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
                      mkdir -p $DOCKER_CONFIG/cli-plugins
                      curl -SL https://github.com/docker/compose/releases/download/v2.5.0/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
                      chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
            - run:
                  name: Build API Docker image
                  command: docker compose build
            - run:
                  name: Push API Docker image
                  command: |
                      docker tag project_api europe-north1-docker.pkg.dev/mewi-347117/mewi-docker-repo/mewi-api
                      docker push europe-north1-docker.pkg.dev/mewi-347117/mewi-docker-repo/mewi-api
workflows:
    version: 2
    build_test_and_deploy:
        jobs:
            - setup:
                filters:
                    branches:
                        only:
                            - main
            - gcp-cli/install_and_initialize_cli:
                  executor: gcp-cli/default
            - test:
                requires:
                    - setup
                    - gcp-cli/install_and_initialize_cli
            - build:
                requires:
                    - setup
                    - gcp-cli/install_and_initialize_cli
            - deploy:
                  filters:
                      branches:
                          only:
                              - main
                  requires:
                      - test
                      - build
    build_and_test:
        jobs:
            - hold:
                  type: approval
                  filters:
                      branches:
                          only:
                              - dev
            - setup:
                  requires:
                      - hold
            - test:
                    requires:
                        - setup
