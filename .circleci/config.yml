version: 2.1
orbs:
    gcp-cli: circleci/gcp-cli@2.4.1
jobs:
    setup:
        docker:
            - image: 'cimg/node:14.17-browsers'
        steps:
            - checkout
            - run: sudo npm i -g pnpm@latest-6
            - restore_cache:
                  key: dependency-cache-{{ checksum "pnpm-lock.yaml" }}
            - run:
                  name: Install
                  command: pnpm i --frozen-lockfile
            - save_cache:
                  key: dependency-cache-{{ checksum "pnpm-lock.yaml" }}
                  paths:
                      - node_modules/*
                      - packages/nest-api/node_modules/*
                      - packages/common/node_modules/*
                      - packages/prisma/node_modules/*
                      - packages/test-utils/node_modules/*
                      - packages/ui/node_modules/*
                      - packages/webapp/node_modules/*
    build:
        docker:
            - image: 'cimg/node:14.17-browsers'
        steps:
            - checkout
            - run: sudo npm i -g pnpm@latest-6
            - restore_cache:
                  key: dependency-cache-{{ checksum "pnpm-lock.yaml" }}
            - run:
                  name: Isolate API workspace
                  command: |
                      pnpm isolate -F nest-api
            - save_cache:
                  key: build-output-{{ .Environment.CIRCLE_SHA1 }}
                  paths:
                      - ./packages/nest-api/_isolated_
            - store_artifacts:
                  path: ./packages/nest-api/_isolated_
                  destination: nest-api
    test:
        docker:
            - image: 'cimg/node:14.17-browsers'
            - image: 'mongo'
        steps:
            - checkout
            - run: sudo npm i -g pnpm@latest-6
            - restore_cache:
                  key: dependency-cache-{{ checksum "pnpm-lock.yaml" }}
            - run:
                  name: Lint all packages
                  command: pnpm run lint
            - run:
                  name: Test all packages
                  command: pnpm run test
    deploy:
        docker:
            - image: google/cloud-sdk
        steps:
            - checkout
            - restore_cache:
                  key: build-output-{{ .Environment.CIRCLE_SHA1 }}
            - restore_cache:
                  key: dependency-cache-{{ checksum "pnpm-lock.yaml" }}
            - setup_remote_docker:
                  version: 20.10.12
                  docker_layer_caching: true
            - run:
                  name: Service Account Key
                  command: echo ${GCLOUD_SERVICE_KEY} > ${HOME}/gcloud-service-key.json
            - run:
                  name: Set gcloud command
                  command: |
                      gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
                      gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            # TODO: deploy to cloud run
            # - run:
            #       name: deploy to Google App Engine
            #       command: |
            #           cd ./packages/nest-api
            #           gcloud app deploy app.yaml
workflows:
    version: 2
    build_test_and_deploy:
        jobs:
            - setup:
                  filters:
                      branches:
                          only:
                              - main
            - gcp-cli/install_and_initialize_cli:
                  requires:
                      - setup
                  executor: gcp-cli/default
            - test:
                  requires:
                      - setup
                      - gcp-cli/install_and_initialize_cli
            - build:
                  requires:
                      - setup
                      - gcp-cli/install_and_initialize_cli
            - deploy:
                  filters:
                      branches:
                          only:
                              - main
                  requires:
                      - test
                      - build
    build_and_test:
        jobs:
            - setup:
                  filters:
                      branches:
                          only:
                              - dev
            - test:
                  requires:
                      - setup
