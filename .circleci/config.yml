version: 2.1
jobs:
    test:
        docker:
            - image: 'cimg/node:16.15.0-browsers'
              environment:
                  MONGO_URI: localhost
                  TOKEN_KEY: fjAJ4mv0WRlc7ob1Dq7J
                  SEARCH_ENGINE_URL: localhost
                  SEARCH_ENGINE_PORT: 9200

            - image: 'mongo'
        steps:
            - checkout
            - run: sudo npm i pnpm -g
            - run:
                  command: pnpm i
                  name: Install dependencies
            # - run:
            #       command: sudo npm install pm2 -g
            #       name: Installing pm2
            - run:
                  command: pnpm lint
                  name: Lint projects
            - run:
                  command: pnpm build
                  name: Run Builds
            # - run:
            #       command: npx nx build api
            #       name: Build API
            # - run:
            #       command: npx pm2 start dist/packages/api/main.js
            #       name: Start API in background
            # - run:
            #       command: npx nx e2e webapp-e2e --record --key $CYPRESS_KEY
            #       name: E2E test client
            - run:
                  #   command: npx nx run-many --all --target=test
                  command: pnpm test
                  name: Run Unit Tests
            - persist_to_workspace:
                  root: .
                  paths:
                      - '*'
    deploy:
        docker:
            - image: 'cimg/node:14.17-browsers'
        steps:
            # TODO: deploy image
            - checkout
            - attach_workspace:
                  at: .
            - add_ssh_keys:
                  fingerprints:
                      - 'b0:88:e6:4a:98:e3:71:07:c1:4a:ee:2f:c9:6b:98:e1'
            - run: sudo npm i pnpm -g
            - run:
                  command: ./packages/api/script/deploy-api.sh
                  name: Deploy to API server
            - run:
                  command: |
                      cd ./packages/webapp
                      npx netlify deploy --auth $NETLIFY_TOKEN --site $NETLIFY_SITE_ID --prod --dir=build
                  name: Deploy to apps
workflows:
    version: 2
    build_test_and_deploy:
        jobs:
            - test:
                  filters:
                      branches:
                          only:
                              - main
            - deploy:
                  filters:
                      branches:
                          only:
                              - main
                  requires:
                      - test
    build_and_test:
        jobs:
            - hold:
                  type: approval
                  filters:
                      branches:
                          only:
                              - dev
            - test:
                  requires:
                      - hold
