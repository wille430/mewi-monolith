{
  "compilerOptions": {
    "experimentalDecorators": true,
    "emitDecoratorMetadata": true,
    "target": "es6",
    "lib": [
      "dom",
      "dom.iterable",
      "esnext",
      "ES2017"
    ],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noImplicitAny": false,
    "forceConsistentCasingInFileNames": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "paths": {
      "@/*": [
        "./src/*"
      ]
    }
  },
  "include": [
    "next-env.d.ts",
    "**/*.ts",
    "**/*.tsx"
  ],
  "exclude": [
    "node_modules",
    "**/__mocks__/**/*",
    "./src/**/*.spec.ts",
    "./src/**/*.spec.tsx",
    "./src/**/*.test.ts",
    "./src/**/*.test.tsx",
    "./src/**/*.stories.ts",
    "./src/**/*.stories.tsx"
  ],
  "references": [
    {
      "path": "./tsconfig.spec.json"
    }
  ],
  "ts-node": {
    "transpileOnly": true,
    "files": true,
    "require": [
      "tsconfig-paths/register"
    ],
    "compilerOptions": {
      // compilerOptions specified here will override those declared below,
      // but *only* in ts-node.  Useful if you want ts-node and tsc to use
      // different options with a single tsconfig.base.json.
      "module": "CommonJS",
      "paths": {
        "@/*": [
          "./src/*"
        ]
      }
    }
  }
}
